{"version":3,"sources":["components/Header.js","components/Footer.js","utils/api.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo-header.svg"],"names":["Header","className","src","logoImage","alt","Footer","api","options","this","_baseUrl","baseUrl","_headers","headers","fetch","method","then","res","ok","json","Promise","reject","status","statusText","info","body","JSON","stringify","link","card","id","cardId","authorization","Card","title","likes","onCardClick","type","onClick","length","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","name","about","avatar","getInitialsCards","data","map","el","_id","item","key","PopupWithForm","children","text","isOpen","onClose","action","noValidate","ImagePopup","isCard","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","setCard","closeAllPopups","handleCardClick","defaultValue","placeholder","required","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.1be795a7.chunk.js","sourcesContent":["import React from 'react';\nimport logoImage from '../images/logo-header.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header page__header section\">\n      <img className=\"logo header__logo\" src={logoImage} alt=\"Логотип\" />\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer page__footer section\">\n      <p className=\"footer__copyright\">\n        &copy; 2020 Mesto Russia\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;","class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  getInitialsCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  } \n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n\n  patchUserInfo(info) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(info)\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n\n  patchUserAvatar(link) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(link)\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n\n  postCard(card) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(card)\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n\n  removeCard(id) {\n    return fetch(`${this._baseUrl}cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n\n  addLikeCard(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n\n  removeLikeCard(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15/',\n  headers: {\n    authorization: 'fa7c1664-18f3-41d8-b132-37b50e07ed81',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;","import React from 'react';\n\nfunction Card({ title, likes, src, onCardClick }) {\n  \n  function handleClick() {\n    onCardClick({ title, src });\n  }\n\n  return (\n    <li className=\"element\">\n      <button className=\"element__photo\" type=\"button\" onClick={handleClick}>\n        <img src={src} alt=\"фото\" className=\"element__image\" />\n      </button>\n      <div className=\"element__info-container\">\n        <h2 className=\"element__title\">{title}</h2>\n        <div className=\"element__like-container\">\n          <button className=\"element__group\" type=\"button\"></button>\n          <p className=\"element__counter\">{likes.length}</p>\n        </div>\n      </div>\n      <button className=\"element__trash \" type=\"button\"></button>\n    </li>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport api from '../utils/api.js';\nimport Card from './Card.js';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\n  const [userName, setUserName] = React.useState();\n  const [userDescription, setUserDescription] = React.useState();\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api.getUserInfo()\n    .then((info) => {\n      setUserName(info.name);\n      setUserDescription(info.about);\n      setUserAvatar(info.avatar);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    api.getInitialsCards()\n    .then((data) => {\n      const card = data.map((el) => ({\n        title: el.name,\n        src: el.link,\n        likes: el.likes,\n        id: el._id\n      })) \n      setCards(card)\n    });\n  }, []);\n\n  return (\n    <main className=\"content page__content\">\n      <section className=\"profile section content__section\">\n        <div className=\"profile__info\">\n          <button className=\"profile__image-button\" type=\"button\" onClick={onEditAvatar}>\n            <div className=\"profile__icon\"></div>\n            <img src={userAvatar} alt=\"фото\" className=\"profile__image\" />\n          </button>\n          <div className=\"profile__edit\">\n            <div className=\"profile__text\">\n              <h1 className=\"profile__title\">{userName}</h1>\n              <p className=\"profile__subtitle\">{userDescription}</p>\n            </div>\n            <button className=\"profile__edit-button\" type=\"button\" onClick={onEditProfile}></button>\n          </div>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\" onClick={onAddPlace}></button>\n      </section>\n      <section className=\"elements section content__section\">\n        <ul className=\"elements__list\">\n          {cards.map(({id, ...item}) => \n            <Card \n              key={id} \n              {...item} \n              onCardClick={onCardClick} \n            />\n          )}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;","import React from 'react';\n\nfunction PopupWithForm({ name, title, children, text, isOpen, onClose }) {\n  return (\n    <div className={`modal modal_type_${name} ${isOpen ? 'modal_opened' : ''}`}>\n      <div className=\"modal__container\">\n        <button className=\"modal__close-button\" type=\"button\" onClick={onClose}></button>\n        <h2 className=\"modal__title\">{title}</h2>\n        <form className=\"modal__form\" action=\"#\" name={`modal_${name}_form`} noValidate>\n        {children}\n        <button type=\"submit\" className=\"modal__button modal__button_action modal__button_disabled\">{text}</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup({ isCard, card, onClose }) {\n  return (\n    <div className={`modal modal_type_photo ${card ? 'modal_opened' : ''}`}>\n      <div className=\"modal__container-photo\">\n        <button className=\"modal__close-button modal__close-button_type_photo\" type=\"button\" onClick={onClose}></button>\n        <img src={isCard.src} alt={isCard.title} className=\"modal__photo\" />\n        <p className=\"modal__text\">{isCard.title}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Main from './Main.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\n\nfunction App() {\n\nconst [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\nconst [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\nconst [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\nconst [selectedCard, setSelectedCard] = React.useState(false);\nconst [card, setCard] = React.useState([]);\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  function handleCardClick(card) {\n    setCard(card);\n    setSelectedCard(true);\n  }\n\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header />\n          <Main \n          onEditAvatar={() => {\n            handleEditAvatarClick();\n          }}\n          onEditProfile={() => {\n            handleEditProfileClick();\n          }}\n          onAddPlace={() => {\n            handleAddPlaceClick();\n          }}\n          onCardClick={(card) => {\n            handleCardClick(card);\n          }}\n          />\n          <Footer />\n        </div>\n        <PopupWithForm \n          name={'edit-profile'} \n          title={'Редактировать профиль'} \n          children={\n            <>\n              <label>\n                <input type=\"text\" className=\"modal__item modal__item_type_name\" name=\"name\" defaultValue=\"Жак-Ив Кусто\" placeholder=\"ФИО\" required minLength=\"2\" maxLength=\"40\" />\n                <span id=\"name-error\" className=\"modal__item-error\"></span>\n              </label>\n              <label>\n                <input type=\"text\" className=\"modal__item modal__item_type_profession\" name=\"about\" defaultValue=\"Исследователь океана\" placeholder=\"Профессия\" required minLength=\"2\" maxLength=\"200\" />\n                <span id=\"about-error\" className=\"modal__item-error\"></span>\n              </label>\n            </>\n          } \n          text={'Сохранить'}\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n        />\n        <PopupWithForm \n          name={'add-card'} \n          title={'Новое место'} \n          children={\n            <>\n              <label>\n                <input type=\"text\" className=\"modal__item modal__item_type_place\" name=\"name\" defaultValue=\"\" placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" />\n                <span id=\"name-error\" className=\"modal__item-error\"></span>\n              </label>\n              <label>\n                <input type=\"url\" className=\"modal__item modal__item_type_link-place\" name=\"link\" defaultValue=\"\" placeholder=\"Ссылка на картинку\" required />\n                <span id=\"link-error\" className=\"modal__item-error\"></span>\n              </label>\n            </>\n          } \n          text={'Создать'}\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n        />\n        <PopupWithForm \n          name={'confirm'} \n          title={'Вы уверены?'} \n          text={'Да'} \n        />\n        <PopupWithForm \n          name={'update-avatar'} \n          title={'Обновить аватар'} \n          children={\n            <>\n              <label>\n                <input type=\"url\" className=\"modal__item modal__item_type_avatar\" name=\"avatar\" defaultValue=\"\" placeholder=\"Ссылка на фото\" required />\n                <span id=\"avatar-error\" className=\"modal__item-error\"></span>\n              </label>\n            </>\n          } \n          text={'Сохранить'}\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <ImagePopup \n          isCard={card}\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-header.2b1f7ee5.svg\";"],"sourceRoot":""}